name: package

on:
    workflow_call:
    workflow_dispatch:

env:
  PACKAGE_DIR: "target/packages"

jobs:  
  package:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/i2a2/iriocore-docker:latest
    steps:
    - name: Install Dependencies
      run: |
        dnf install -y epel-release --enablerepo=extras
        /usr/bin/crb enable
        dnf install -y doxygen graphviz --enablerepo=appstream --enablerepo=crb
      
    - uses: actions/checkout@v4  
    - name: Generate RPM packages
      run: | 
        make package -j

    - name: Generate DEB packages
      working-directory: ${{ env.PACKAGE_DIR }}
      run: |
        alien *.rpm
    
    - name: Extract Project Name
      id: extract_project_name
      run: echo "PROJECT_NAME=$(echo $GITHUB_REPOSITORY | cut -d / -f 2)" >> $GITHUB_OUTPUT

    - name: Group packages
      working-directory: ${{ env.PACKAGE_DIR }}
      run: |
        tar -czvf rpm-${{ steps.extract_project_name.outputs.PROJECT_NAME }}-${{ github.ref_name}}.tar.gz *.rpm
        tar -czvf deb-${{ steps.extract_project_name.outputs.PROJECT_NAME }}-${{ github.ref_name}}.tar.gz *.deb

    - name: Upload rpm artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rpm_${{ steps.extract_project_name.outputs.PROJECT_NAME }}_${{ github.ref_name}}
        path: ./${{ env.PACKAGE_DIR }}/rpm-${{ steps.extract_project_name.outputs.PROJECT_NAME }}-${{ github.ref_name}}.tar.gz
        if-no-files-found: error
    
    - name: Upload deb artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deb_${{ steps.extract_project_name.outputs.PROJECT_NAME }}_${{ github.ref_name}}
        path: ./${{ env.PACKAGE_DIR }}/deb-${{ steps.extract_project_name.outputs.PROJECT_NAME }}-${{ github.ref_name}}.tar.gz
        if-no-files-found: error
    